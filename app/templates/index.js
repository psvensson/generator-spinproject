// Generated by CoffeeScript 1.9.3
(function() {
  var AuthenticationManager, QPAPILogic, SpinCycle, _log, app, authMgr, bodyParser, dbUrl, express, messageRouter, port, server;

  express = require('express');

  app = express();

  bodyParser = require('body-parser');

  server = require("http").createServer(app);

  port = process.env.PORT || 6006;

  dbUrl = null;

  _log = console.log;

  console.log = function(msg) {
    var ts;
    ts = new Date() + "";
    return _log(ts + ' - ' + msg);
  };

  server.listen(port, function() {
    return console.log("Server listening at port %d", port);
  });

  app.use(bodyParser.urlencoded({
    extended: true
  }));

  app.use(bodyParser.json());

  app.use(function(req, res, next) {
    res.header('Access-Control-Allow-Origin', '*');
    res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept');
    return next();
  });

  SpinCycle = require('spincycle');

  AuthenticationManager = require('./AuthenticationManager');

  QPAPILogic = require('./server/Logic');

  app.use(express["static"]("app"));

  authMgr = new AuthenticationManager(app);

  messageRouter = new SpinCycle(authMgr, dbUrl, null, app, 'rethinkdb');

  new SpinCycle.HttpMethod(messageRouter, app, '/api/');

  new SpinCycle.WsMethod(messageRouter, server);

  new QPAPILogic(messageRouter);

}).call(this);

//# sourceMappingURL=index.js.map
